name: 기능 테스트

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  # 수동으로도 실행 가능
  workflow_dispatch:

jobs:
  unit-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: JDK 21 설정
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle
      
      - name: 단위 테스트 실행
        run: ./gradlew test
      
      - name: 테스트 결과 저장
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-reports
          path: build/reports/tests/
  
  integration-test:
    needs: unit-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: JDK 21 설정
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle
      
      - name: H2 데이터베이스 시작
        run: |
          echo "H2 데이터베이스는 애플리케이션이 시작될 때 자동으로 구성됩니다"
      
      - name: 애플리케이션 빌드
        run: ./gradlew build -x test
      
      - name: 애플리케이션 실행 
        run: |
          nohup java -jar build/libs/*.jar &
          echo "애플리케이션 시작 중..."
          sleep 30  # 애플리케이션 시작 대기
      
      - name: API 기능 테스트
        run: |
          # GET 요청으로 게시글 목록 확인
          curl -s -o response.json http://localhost:8080/api/posts
          cat response.json
          
          # 게시글 생성 테스트
          curl -s -X POST -H "Content-Type: application/json" \
            -d '{"title": "테스트 게시글", "content": "테스트 내용", "author": "GitHub Actions"}' \
            http://localhost:8080/api/posts
          
          # 다시 목록 조회하여 새 게시글이 추가됐는지 확인
          curl -s -o updated_response.json http://localhost:8080/api/posts
          cat updated_response.json
          
          # 게시글 수가 증가했는지 확인 (jq 설치 필요)
          apt-get update && apt-get install -y jq
          initial_count=$(cat response.json | jq 'length')
          updated_count=$(cat updated_response.json | jq 'length')
          
          if [ $updated_count -gt $initial_count ]; then
            echo "✅ 게시글 추가 확인: 성공"
          else
            echo "❌ 게시글 추가 확인: 실패"
            exit 1
          fi 